//[zone, borb, TLMax, activeZones]
let ascTable =
[[1000000,439,908424,91576],[1021394,444,927292,94102],[1057319,451,960944,96375],[1079163,456,980208,98955],[1116142,464,1014878,101264],[1138628,469,1034708,103920],[1176739,476,1046766,129973],[1199912,481,1090900,109012],[1214003,484,1103326,110677],[1225932,486,1135320,90612],[1236952,488,1141717,95235],[1247130,490,1147626,99504],[1256533,492,1153084,103449],[1265218,494,1158126,107092],[1273240,496,1162784,110456],[1292189,499,1167086,125103],[1309693,503,1178311,131382],[1325860,506,1192857,133003],[1340795,509,1206293,134502],[1354589,511,1218704,135885],[1367331,514,1230167,137164],[1379101,516,1252295,126806],[1389972,518,1262076,127896],[1400014,520,1271110,128904],[1409290,521,1279456,129834],[1417858,523,1287164,130694],[1437330,527,1294284,143046],[1455317,530,1310466,144851],[1471931,533,1325414,146517],[1487277,536,1339221,148056],[1501452,538,1351974,149478],[1514546,541,1363754,150792],[1526641,543,1374635,152006],[1537812,545,1396244,141568],[1548131,547,1405528,142603],[1557663,548,1414103,143560],[1566467,550,1422025,144442],[1574599,551,1429341,145258],[1582111,553,1436100,146011],[1600599,556,1442342,158257],[1617676,559,1457706,159970],[1633450,561,1471898,161552],[1648021,564,1485006,163015],[1661479,566,1497115,164364],[1673911,568,1508299,165612],[1685394,570,1518631,166763],[1696001,572,1528173,167828],[1705798,574,1548537,157261],[1714847,575,1556678,158169],[1723206,577,1564199,159007],[1730928,578,1571146,159782],[1738060,579,1577562,160498],[1744648,580,1583489,161159],[1750733,581,1588964,161769],[1756354,582,1594021,162333],[1761546,583,1598692,162854],[1766341,584,1603007,163334],[1770771,585,1606992,163779],[1774863,585,1610673,164190],[1778643,586,1614074,164569],[1782134,587,1617215,164919],[1806151,590,1620116,186035],[1828336,594,1640076,188260],[1848828,597,1658512,190316],[1867757,600,1675542,192215],[1885241,603,1691272,193969],[1901391,606,1705802,195589],[1916309,608,1719223,197086],[1930087,610,1752412,177675],[1954354,614,1763863,190491],[1976768,618,1784029,192739],[1997473,621,1802656,194817],[2016597,624,1819862,196735],[2034262,627,1835755,198507],[2050579,629,1850435,200144],[2065651,632,1863995,201656],[2079573,634,1888059,191514],[2092432,636,1899629,192803],[2104311,637,1910315,193996],[2115282,639,1920186,195096],[2125417,641,1929304,196113],[2134778,642,1937726,197052],[2143425,643,1945506,197919],[2162970,646,1952692,210278],[2181024,649,1968935,212089],[2197700,651,1983938,213762],[2213104,654,1997796,215308],[2227333,656,2010597,216736],[2240475,658,2022422,218053],[2252615,660,2033343,219272],[2263828,661,2043432,220396],[2274186,663,2052751,221435],[2283753,664,2061358,222395],[2292591,665,2069309,223282],[2300754,667,2088211,212543],[2308294,668,2094995,213299],[2315258,669,2101261,213997],[2321691,670,2107048,214643],[2327634,670,2112395,215239],[2333122,671,2117333,215789],[2338192,672,2121894,216298],[2342875,673,2126108,216767],[2347201,673,2129999,217202],[2351197,674,2133594,217603],[2354888,674,2136915,217973],[2358297,675,2139982,218315],[2361446,675,2142815,218631],[2396696,680,2145432,251264],[2429257,685,2174726,254531],[2459333,689,2201785,257548],[2487113,693,2226779,260334],[2512775,697,2249866,262909],[2548016,702,2271191,276825],[2580568,706,2332819,247749],[2610636,710,2359871,250765],[2638410,714,2384858,253552],[2664064,717,2407939,256125],[2687761,721,2429258,258503],[2709649,724,2460490,249159],[2741425,728,2478680,262745],[2770777,732,2505087,265690],[2797889,735,2529479,268410],[2822931,739,2552009,270922],[2846063,742,2572821,273242],[2867430,744,2592044,275386],[2887167,747,2609801,277366],[2905397,749,2626202,279195],[2922236,751,2652910,269326],[2937790,753,2666904,270886],[2984499,759,2679830,304669],[3027644,765,2718646,308998],[3067496,770,2754501,312995],[3115846,776,2787619,328227],[3160506,782,2827800,332706],[3201759,787,2897255,304504],[3239863,791,2931537,308326],[3275060,796,2963203,311857],[3307571,800,2992452,315119],[3349159,805,3031009,318150],[3387573,809,3065570,322003],[3423056,813,3097493,325563],[3455832,817,3126981,328851],[3497655,822,3154218,343437],[3557080,829,3188975,368105],[3611970,836,3249917,362053],[3662671,841,3295532,367139],[3721042,848,3337666,383376],[3774959,854,3397723,377236],[3824761,860,3463322,361439],[3870763,865,3504709,366054],[3924813,871,3542938,381875],[3974738,877,3599394,375344],[4020854,882,3640883,379971],[4063450,886,3679207,384243],[4102797,891,3714606,388191],[4171482,898,3747304,424178],[4234925,905,3815941,418984],[4305066,912,3868665,436401],[4369855,919,3926954,442901],[4429700,925,4013137,416563],[4496536,932,4062870,433666],[4558272,939,4118412,439860],[4615296,945,4181255,434041],[4667970,950,4228645,439325],[4728173,956,4272418,455755],[4783781,962,4322448,461333],[4835147,967,4380219,454928],[4882593,972,4422905,459688],[4926418,976,4462334,464084],[4966899,980,4498754,468145],[5004291,984,4532395,471896],[5038830,987,4575018,463812],[5070733,990,4603721,467012],[5100201,993,4630233,469968],[5127421,996,4654722,472699],[5152564,998,4677343,475221],[5175788,1001,4698237,477551],[5197240,1003,4717537,479703],[5217055,1005,4735365,481690],[5235358,1006,4751832,483526],[5252265,1008,4767042,485223],[5267881,1009,4781092,486789],[5282306,1011,4794069,488237],[5295630,1012,4806057,489573],[5307937,1013,4817129,490808],[5319305,1014,4827357,491948],[5329805,1015,4836804,493001],[5339505,1016,4845531,493974],[5348464,1017,4853591,494873],[5356739,1018,4861036,495703],[5364383,1019,4867914,496469],[5371444,1019,4874266,497178],[5377966,1020,4880134,497832],[5383990,1020,4885554,498436],[5389555,1021,4890560,498995],[5394695,1021,4895184,499511],[5399443,1022,4899456,499987],[5403828,1022,4903401,500427],[5407879,1023,4907046,500833],[5411621,1023,4910412,501209],[5415077,1023,4913522,501555],[5418269,1024,4916394,501875],[5421218,1024,4919047,502171],[5423942,1024,4921497,502445],[5426458,1024,4923761,502697],[5428782,1025,4925852,502930],[5430928,1025,4927783,503145],[5432911,1025,4929567,503344],[5434743,1025,4931215,503528],[5436434,1025,4932737,503697],[5437997,1026,4934143,503854],[5439441,1026,4935441,504000],[5440774,1026,4936641,504133],[5442005,1026,4937749,504256],[5443143,1026,4938772,504371],[5444194,1026,4939718,504476],[5445164,1026,4940591,504573],[5446061,1026,4941397,504664],[5446889,1026,4942142,504747],[5447654,1026,4942831,504823],[5448360,1027,4943466,504894],[5449013,1027,4944053,504960],[5449616,1027,4944596,505020],[5450173,1027,4945097,505076],[5450687,1027,4945559,505128],[5451162,1027,4945987,505175],[5451601,1027,4946382,505219],[5452006,1027,4946746,505260],[5452381,1027,4947083,505298],[5452726,1027,4947394,505332],[5453046,1027,4947682,505364],[5453341,1027,4947947,505394],[5453614,1027,4948193,505421],[5453865,1027,4948419,505446],[5454098,1027,4948628,505470],[5454313,1027,4948822,505491],[5454511,1027,4949000,505511],[5454694,1027,4949165,505529],[5454864,1027,4949317,505547],[5455020,1027,4949458,505562],[5455165,1027,4949588,505577],[5455298,1027,4949708,505590],[5455421,1027,4949819,505602],[5455535,1027,4949921,505614],[5455640,1027,4950016,505624],[5455738,1027,4950104,505634],[5455828,1027,4950185,505643],[5455911,1027,4950259,505652],[5455988,1027,4950329,505659],[5456059,1027,4950393,505666]]; //taken from a modified progression calculator

let endBorb = 1027;
let borb = endBorb;
let strats = [];
let treshold = endBorb;
let treshold2 = endBorb + 1;

//[[borbTarget,...], [time,...], totalTime]
strats[endBorb] = [[], [], 0];

let minBorb = 185;
let zoneToBorb = [];
for (let i=0; i<ascTable.length; i++) {
    let a = ascTable[i];
    if (a[1] > zoneToBorb.length) {
        zoneToBorb[a[1]] = a[0];
    }
}

let borbToZone = [];

function getTime(borb, goal) {
    let zones = 8050 * 168;
    let borbLimit = borb * 5000;
    if (goal < 437) {
        let as = (goal + 1) * goal / 2;
        let zone = ((as + 1000) / 5 - 4) / 0.09691001300805641435878331582652 * 5 + 100;
        zones -= 1e6 - zone;
        if (zone > borbLimit) {
            let x = zone - borbLimit;
            zones += x * x / 10830;
        }
        return [Math.round(zone), zones];
    }
    for (let i=0; i<ascTable.length; i++) {
        let a = ascTable[i];
        let tl = a[2];
        zones += Number(a[3]) + 8000;
        if (a[0] > borbLimit) {
            let x = a[0] - borbLimit;
            zones += x * x / 10830;
        }
        if (tl > borbLimit) {
            zones += tl - borbLimit;
        }
        if (a[1] >= goal) {
            return [Number(a[0]), zones];
        }
    }
    return Infinity;
}

while (borb > minBorb ) {
    borb--;
    let singleTZone = 0;
    let singleT = [[], [], Infinity];
    for (let i=treshold; i<treshold2; i++) {
        let [zone, time] = getTime(borb,i);
        let totalTime = time + strats[i][2];
        if (totalTime < singleT[2]) {
            let strat = strats[i];
            singleT = [
                [i].concat(strat[0]),
                [time].concat(strat[1]),
                totalTime
            ];
            singleTZone = zone;
        }
    }
    if (borb > (treshold - 2)) {
        strats[borb] = singleT;
        borbToZone[borb] = singleTZone;
        continue;
    }
    let doubleTZone = 0;
    let doubleT = [[], [], Infinity];
    for (let j=borb+1; j<treshold; j++) {
        for (let k=treshold; k<treshold2; k++) {
            let [z1, t1] = getTime(borb, j);
            let [z2, t2] = getTime(j, k);
            let time = [t1, t2];
            let totalTime = time[0] + time[1] + strats[k][2];
            if (totalTime < doubleT[2]) {
                let strat = strats[k];
                doubleT = [
                    [j, k].concat(strat[0]),
                    time.concat(strat[1]),
                    totalTime,
                    singleT
                ];
                doubleTZone = [z1, z2];
            }
        }
    }
    if (doubleT[2] < singleT[2]) {
        treshold2 = treshold;
        treshold = borb + 1;
        strats[borb] = doubleT;
        borbToZone[borb] = doubleTZone[0];
    } else {
        strats[borb] = singleT;
        borbToZone[borb] = singleTZone;
    }
}

console.log(JSON.stringify(borbToZone));
